name: Build, test and deploy package

on:
  workflow_call:
    inputs:
      package:
        description: 'Package name to be build, test and deployed.'
        type: string
        required: true

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Linted" >> $GITHUB_STEP_SUMMARY

  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Get version
        id: version
        run: |
          cd packages/${{ inputs.package }}
          declare version=$(jq -r '.version' ./package.json)
          echo "version=$version" | tee $GITHUB_OUTPUT
      - run: env
      - name: Building Docker image for ${{ inputs.package }}
        id: docker
        run: |
          declare imagePath="$RUNNER_TEMP/image.tar"
          echo "imagePath=$imagePath" | tee $GITHUB_OUTPUT
          cd packages/${{ inputs.package }}
          docker build --tag ${{ inputs.package }} .
          docker save ${{ inputs.package }} > $imagePath
          echo "Files in $RUNNER_TEMP:"
          ls "$RUNNER_TEMP"
      - uses: actions/upload-artifact@v3
        with: 
          name: docker-${{ inputs.package }}-${{ steps.version.outputs.version }}.tar
          path: ${{ steps.docker.outputs.imagePath }}

  Test:
    runs-on: ubuntu-latest
    needs: [ Lint ]
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        id: version
        run: |
          cd packages/${{ inputs.package }}
          declare version=$(jq -r '.version' ./package.json)
          echo "version=$version" | tee $GITHUB_OUTPUT
      - uses: actions/download-artifact@v3
        with: 
          name: docker-${{ inputs.package }}-${{ steps.version.outputs.version }}.tar
          path: /tmp/image.tar
      - run: echo "Tests OK" >> $GITHUB_STEP_SUMMARY

  Deploy:
    runs-on: ubuntu-latest
    needs: [ Build, Test ]
    steps:
      - run: echo "Deployed" >> $GITHUB_STEP_SUMMARY
